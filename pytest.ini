[pytest]
python_files = test_*
python_classes = Test*
python_functions = test_*
minversion = 8.0

markers =
    ;add markers of group tests - can use
    setup: set up tests
    sanity: sanity tests
    mocks: all mocks
    joke_mocks: mocks for jokes
    add: test add
    inner_marker: an inner marker
    outer_marker: an outer marker

; When the --strict-markers command-line flag is passed, any unknown marks applied with the @pytest.mark.name_of_the_mark decorator will trigger an error. You can enforce this validation in your project by adding --strict-markers to addopts:
; https://docs.pytest.org/en/7.1.x/how-to/mark.html?highlight=strict

; e.g if you have not setup marker in this file called setupstrict and you use it with pytest -m setupstrict it will throw an error

; addopts = --strict-markers --headed
addopts = -p no:warnings

; suppress warnings
filterwarnings =
    ignore::UserWarning
    ignore:InsecureRequestWarning
    

# for log file - pytest uses these whenever logger used
log_file = log/pytesting.log
log_file_level = INFO
log_file_format = %(asctime)s [%(levelname)8s] [%(name)s] %(message)s (%(filename)s:%(lineno)s)
log_file_date_format=%Y-%m-%d %H:%M:%S